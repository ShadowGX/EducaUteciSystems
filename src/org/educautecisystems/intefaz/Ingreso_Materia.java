/*
 *  ChatServerInterface.java
 *  Copyright (C) 2012  Guillermo Pazos <shadowguiller@gmail.com>
 *
 *  This program is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

package org.educautecisystems.intefaz;
import java.util.ArrayList;
import java.util.List;
import org.educautecisystems.controladores.MateriaJpaController;
import org.educautecisystems.core.Sistema;
import org.educautecisystems.entidades.Materia;
import org.educautecisystems.intefaz.objects.ObjComboBoxMateria;


/**
 *
 * @author Shadow2013
 */
public class Ingreso_Materia extends javax.swing.JInternalFrame {
private ArrayList <ObjComboBoxMateria> objHorarios = new ArrayList<ObjComboBoxMateria>();
    /**
     * Creates new form Ingreso_Materia
     */
    public Ingreso_Materia() {
        initComponents();
        cargarMaterias();     
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    private void cargarMaterias() {
        MateriaJpaController controladorMateria = new MateriaJpaController(Sistema.getEmf());
        List<Materia> materias = controladorMateria.findMateriaEntities();
        
        /* Cerrar ventana cuando no hay materias */
        if (materias.isEmpty()) {
            Sistema.mostrarMensajeError("No se han ingresado materias.");
            this.dispose();
            return;
        }
        
        for ( Materia materia:materias ) {
            ComboIngTi.addItem(new ObjComboBoxMateria(materia));
        }
                 
        List<Materia> horarios = controladorMateria.findMateriaEntities();
        for (Materia horario:horarios)
        {
            ObjComboBoxMateria objHorario = new ObjComboBoxMateria(horario);
            cmbHorario.addItem(objHorario);
            objHorarios.add(objHorario);
        }
    }
    
     
    private boolean comprobarNombreMateria () {
        MateriaJpaController controladorMateria = new MateriaJpaController(Sistema.getEmf());
        List <Materia> materias = controladorMateria.findMateriaEntities();
        
        for ( Materia materia:materias ) {
            if ( materia.getNombre().equals(TextIngreso.getText()) ) {
                return false;
            }
        }
        return true;  
    }
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        ComboIngTi = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        TextIngreso = new javax.swing.JTextField();
        ButtonIngreso = new javax.swing.JButton();
        jButCancelar = new javax.swing.JButton();
        cmbHorario = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jComHorario = new javax.swing.JComboBox();

        setTitle("Ingreso de Nueva Materia");

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel1.setText("Ingreso de Nueva Materia");

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel5.setText("Materias Existentes");

        ComboIngTi.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "" }));

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel4.setText("Ingrese Nuevo:");

        ButtonIngreso.setText("Ingresar");
        ButtonIngreso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonIngresoActionPerformed(evt);
            }
        });

        jButCancelar.setText("Cancelar");
        jButCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButCancelarActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel2.setText("Horario");

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel3.setText("Eliga el Horario");

        jComHorario.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Diurno", "Nocturno" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jLabel4))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel1)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(22, 22, 22)
                                    .addComponent(jLabel5))
                                .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(cmbHorario, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(ComboIngTi, 0, 289, Short.MAX_VALUE)))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(36, 36, 36)
                                .addComponent(jComHorario, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(TextIngreso, javax.swing.GroupLayout.PREFERRED_SIZE, 403, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(ButtonIngreso)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButCancelar)))))
                .addContainerGap(22, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(ComboIngTi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbHorario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(33, 33, 33)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(TextIngreso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jComHorario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ButtonIngreso)
                    .addComponent(jButCancelar))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private void ButtonIngresoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonIngresoActionPerformed
                   if ( TextIngreso.getText().isEmpty()) {
                        Sistema.mostrarMensajeError("Por favor llene el campo.");
                        return;
                    }
        
                    if ( !comprobarNombreMateria() ) {
                            Sistema.mostrarMensajeError("La Materia ya existe.");
                            return;
                        }
        
                    Materia nuevoMateria = new Materia();
        
                    nuevoMateria.setNombre(TextIngreso.getText());
                    ObjComboBoxMateria maselect = (ObjComboBoxMateria) cmbHorario.getSelectedItem();
//                    nuevoMateria.setHorario(cmbHorario.getSelectedItem());
//        
                    MateriaJpaController controlandorMateria =
                            new MateriaJpaController(Sistema.getEmf());
        
                    try {
                            controlandorMateria.create(nuevoMateria);
                        } catch ( Exception e ) {
                            Sistema.mostrarMensajeError("No se pudo crear la nueva materia.");
                        }
        
                    Sistema.mostrarMensajeInformativo("Se ha ingresado satisfactoriamente la materia.");
                    this.dispose();
                   
    }//GEN-LAST:event_ButtonIngresoActionPerformed

    private void jButCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButCancelarActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButCancelarActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ButtonIngreso;
    private javax.swing.JComboBox ComboIngTi;
    private javax.swing.JTextField TextIngreso;
    private javax.swing.JComboBox cmbHorario;
    private javax.swing.JButton jButCancelar;
    private javax.swing.JComboBox jComHorario;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    // End of variables declaration//GEN-END:variables
}
